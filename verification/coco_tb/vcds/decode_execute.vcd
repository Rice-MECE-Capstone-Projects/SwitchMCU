$date
	Wed Apr 30 12:45:18 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module decode_execute $end
$var wire 1 ! Noop $end
$var wire 64 " Single_Instruction_i [63:0] $end
$var wire 64 # Single_Instruction_o [63:0] $end
$var wire 1 $ i_clk $end
$var wire 1 % i_en $end
$var wire 32 & imm_i [31:0] $end
$var wire 32 ' imm_o [31:0] $end
$var wire 32 ( instruction [31:0] $end
$var wire 32 ) operand1_pi [31:0] $end
$var wire 32 * operand2_pi [31:0] $end
$var wire 32 + pc_i [31:0] $end
$var wire 5 , rd_i [4:0] $end
$var wire 5 - rd_o [4:0] $end
$var wire 5 . rs1_i [4:0] $end
$var wire 5 / rs1_o [4:0] $end
$var wire 5 0 rs2_i [4:0] $end
$var wire 5 1 rs2_o [4:0] $end
$var wire 1 2 write_reg_file_wire $end
$var wire 4 3 operand_amt_o [3:0] $end
$var wire 7 4 opcode_o [6:0] $end
$var wire 1 5 jump_inst_wire $end
$var wire 5 6 inter_rs2 [4:0] $end
$var wire 5 7 inter_rs1 [4:0] $end
$var wire 5 8 inter_rd [4:0] $end
$var wire 32 9 inter_imm [31:0] $end
$var wire 64 : inter_Single_Instruction [63:0] $end
$var wire 7 ; fun7_o [6:0] $end
$var wire 3 < fun3_o [2:0] $end
$var wire 1 = branch_inst_wire $end
$var wire 32 > alu_result_2 [31:0] $end
$var wire 32 ? alu_result_1 [31:0] $end
$var wire 7 @ INST_typ_o [6:0] $end
$scope module decode_inst $end
$var wire 7 A INST_typ_o [6:0] $end
$var wire 64 B Single_Instruction_o [63:0] $end
$var wire 3 C fun3_o [2:0] $end
$var wire 7 D fun7_o [6:0] $end
$var wire 1 $ i_clk $end
$var wire 1 % i_en $end
$var wire 32 E imm_o [31:0] $end
$var wire 32 F instruction [31:0] $end
$var wire 4 G operand_amt_o [3:0] $end
$var wire 5 H rd_o [4:0] $end
$var wire 5 I rs1_o [4:0] $end
$var wire 5 J rs2_o [4:0] $end
$var wire 7 K opcode_o [6:0] $end
$var wire 7 L opcode [6:0] $end
$var parameter 32 M N_param $end
$var reg 7 N INST_typ [6:0] $end
$var reg 64 O Single_Instruction [63:0] $end
$var reg 3 P fun3 [2:0] $end
$var reg 7 Q fun7 [6:0] $end
$var reg 32 R imm [31:0] $end
$var reg 4 S operand_amt [3:0] $end
$var reg 5 T rd [4:0] $end
$var reg 5 U rs1 [4:0] $end
$var reg 5 V rs2 [4:0] $end
$upscope $end
$scope module execute_inst $end
$var wire 1 ! Noop $end
$var wire 64 W Single_Instruction_i [63:0] $end
$var wire 1 = branch_inst_wire $end
$var wire 1 X debug_i $end
$var wire 1 $ i_clk $end
$var wire 1 % i_en $end
$var wire 32 Y imm_i [31:0] $end
$var wire 32 Z imm_i_signed [31:0] $end
$var wire 32 [ instruction [31:0] $end
$var wire 1 5 jump_inst_wire $end
$var wire 32 \ operand1_pi [31:0] $end
$var wire 32 ] operand1_pi_signed [31:0] $end
$var wire 32 ^ operand2_pi [31:0] $end
$var wire 32 _ operand2_pi_signed [31:0] $end
$var wire 32 ` pc_i [31:0] $end
$var wire 5 a rd_i [4:0] $end
$var wire 5 b rs1_i [4:0] $end
$var wire 5 c rs2_i [4:0] $end
$var wire 1 2 write_reg_file_wire $end
$var wire 32 d alu_result_2 [31:0] $end
$var wire 32 e alu_result_1 [31:0] $end
$var parameter 32 f N_param $end
$var reg 1 g branch_inst $end
$var reg 1 h jump_inst $end
$var reg 33 i result [32:0] $end
$var reg 33 j result_secondary [32:0] $end
$var reg 1 k write_reg_file $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 f
b100000 M
$end
#0
$dumpvars
1k
b0 j
b0 i
0h
0g
b0 e
b0 d
b1000 c
b1010 b
b101 a
b0 `
b1000 _
b1000 ^
b1010 ]
b1010 \
b1000000100001010101001010110011 [
b0 Z
b0 Y
1X
b10000000 W
b1000 V
b1010 U
b101 T
b0 S
b0 R
b100000 Q
b101 P
b10000000 O
b1 N
b110011 L
b110011 K
b1000 J
b1010 I
b101 H
b0 G
b1000000100001010101001010110011 F
b0 E
b100000 D
b101 C
b10000000 B
b1 A
b1 @
b0 ?
b0 >
0=
b101 <
b100000 ;
b10000000 :
b0 9
b101 8
b1010 7
b1000 6
05
b110011 4
b0 3
12
bz 1
b0 0
bz /
b0 .
bz -
b0 ,
b0 +
b1000 *
b1010 )
b1000000100001010101001010110011 (
bz '
b0 &
z%
z$
bz #
b0 "
z!
$end
#60000
1$
0%
#65000
0$
#70001
b100000000000000000 :
b100000000000000000 B
b100000000000000000 W
b100000000000000000 O
b0 ?
b0 e
b0 i
b1110111100 Z
b1110111100 9
b1110111100 E
b1110111100 R
b1110111100 Y
b11101 ;
b11101 D
b11101 Q
b0 6
b0 J
b0 c
b0 V
b11101 7
b11101 I
b11101 b
b11101 U
b10 <
b10 C
b10 P
b11001 8
b11001 H
b11001 T
b11001 a
b10 @
b10 A
b10 N
b10011 L
b10011 4
b10011 K
b0 _
b0 *
b0 ^
b10010100011100010110011000 ]
b10010100011100010110011000 )
b10010100011100010110011000 \
b111011110011101010110010010011 (
b111011110011101010110010010011 F
b111011110011101010110010010011 [
#130001
1$
#135001
0$
#140002
b10010111011011011011000100110 ?
b10010111011011011011000100110 e
0k
b10010111011011011011000100110 i
b1000000000000000000000000 :
b1000000000000000000000000 B
b1000000000000000000000000 W
b1000000000000000000000000 O
02
b110001100 Z
b110001100 9
b110001100 E
b110001100 R
b110001100 Y
b0 ;
b0 D
b0 Q
b10101 6
b10101 J
b10101 c
b10101 V
b10101 7
b10101 I
b10101 b
b10101 U
b0 <
b0 C
b0 P
b0 8
b0 H
b0 T
b0 a
b100 @
b100 A
b100 N
b100011 L
b100011 4
b100011 K
b1000111111110011001000010111 _
b1000111111110011001000010111 *
b1000111111110011001000010111 ^
b10010111011011011010010011010 ]
b10010111011011011010010011010 )
b10010111011011011010010011010 \
b11001010110101000011000100011 (
b11001010110101000011000100011 F
b11001010110101000011000100011 [
#200002
1$
#205002
0$
#210003
1=
b101000111000 >
b101000111000 d
1g
b101000111000 j
b10000000000000000000000000000 :
b10000000000000000000000000000 B
b10000000000000000000000000000 W
b10000000000000000000000000000 O
b1 ?
b1 e
b1 i
b101000111000 Z
b101000111000 9
b101000111000 E
b101000111000 R
b101000111000 Y
b1101 6
b1101 J
b1101 c
b1101 V
b10111 7
b10111 I
b10111 b
b10111 U
b1 <
b1 C
b1 P
b1000 @
b1000 A
b1000 N
b1100011 L
b1100011 4
b1100011 K
b11111101001011100001101111111 _
b11111101001011100001101111111 *
b11111101001011100001101111111 ^
b100001011011111001111100111100 ]
b100001011011111001111100111100 )
b100001011011111001111100111100 \
b100010110110111001110011100011 (
b100010110110111001110011100011 F
b100010110110111001110011100011 [
#270003
1$
#275003
0$
#280004
12
0=
b1101111000000000000000000000000 ?
b1101111000000000000000000000000 e
1k
0g
b101101111000000000000000000000000 i
b0 >
b0 d
b0 j
b100000000000000000000000000000000000 :
b100000000000000000000000000000000000 B
b100000000000000000000000000000000000 W
b100000000000000000000000000000000000 O
b11110011100101101111000000000000 Z
b11110011100101101111000000000000 9
b11110011100101101111000000000000 E
b11110011100101101111000000000000 R
b11110011100101101111000000000000 Y
b0 6
b0 J
b0 c
b0 V
b0 7
b0 I
b0 b
b0 U
b0 <
b0 C
b0 P
b10 8
b10 H
b10 T
b10 a
b10000 @
b10000 A
b10000 N
b110111 L
b110111 4
b110111 K
b1100101111101111110100010110 _
b1100101111101111110100010110 *
b1100101111101111110100010110 ^
b101101000110010111000100001100 ]
b101101000110010111000100001100 )
b101101000110010111000100001100 \
b11110011100101101111000100110111 (
b11110011100101101111000100110111 F
b11110011100101101111000100110111 [
#340004
1$
#345004
0$
#350005
b10011011000000000110 >
b10011011000000000110 d
15
1h
b10011011000000000110 j
12
b100 ?
b100 e
1k
b100 i
b1000000000000000000000000000000000 :
b1000000000000000000000000000000000 B
b1000000000000000000000000000000000 W
b1000000000000000000000000000000000 O
b10011011000000000110 Z
b10011011000000000110 9
b10011011000000000110 E
b10011011000000000110 R
b10011011000000000110 Y
b10100 8
b10100 H
b10100 T
b10100 a
b100000 @
b100000 A
b100000 N
b1101111 L
b1101111 4
b1101111 K
b1011111111111000100101 _
b1011111111111000100101 *
b1011111111111000100101 ^
b111100010010111101011110011100 ]
b111100010010111101011110011100 )
b111100010010111101011110011100 \
b11010011011101001101111 (
b11010011011101001101111 F
b11010011011101001101111 [
#410005
1$
#415005
0$
#420006
